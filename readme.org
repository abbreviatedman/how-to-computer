You got cut off in the Limitations of Rainbow Tables section.
* How To Computer

This is a guide to creating the perfect computer for Colin Jaffe. But some of it may be perfect for you, and some of it may be close enough to perfect for you that you can get it the rest of the way on your own.

More than a guide, though, this effectively /is/ my computer system! I'll explain exactly how Real Soon.

** Things To Configure Next

- Auto-Native Compilation
- Use-Package and VC-Use-Package
  - always-ensure
  - vc-use-package (until Emacs 30 when it's built in - set vc-use-package to use forward-looking API)
  - auto-package-update
- General, including gset
- undo system
- some basic menus and bindings
- Evil elisp bindings
- Evil bindings
  - evil collection
  - 3rd party evil stuff
  - my evil stuff
- emacsclient
- sway
- Evil elisp bindings
- Magit
- undo system
- other evil settings
- Vertico & Company
- Keyboard daemon to normalize Emacs keybindings everywhere (hawck)

** Project

Project is Emacs' built-in library for managing "projects"--collections of related files, usually all under the same directory.

*** Open A File On Project Open

When I open a project, I usually want to open a file immediately. Let's set that.

#+NAME: project-initial-action
#+BEGIN_SRC emacs-lisp
  (setq project-switch-commands 'project-find-file)
#+END_SRC

** Git

- Install keychain to store your SSH passwords with =sudo apt install -y keychain=
- Generate the key with =ssh-keygen -t ed25519 -C "[your email address]"=
- Add the key to the ssh agent with =ssh-add ~/.ssh/id_ed25519=
- Run keychain on terminal launch by adding the following to the =.profile= file:

#+NAME: keychain-settings
#+BEGIN_SRC sh
  eval `keychain --agents ssh --eval ~/.ssh/id_ed25519`
#+END_SRC

- Add the contents of =~/.ssh/id_ed25519.pub= as a new SSH key in GitHub's settings.
- Create a Git Config file with the following contents:

#+BEGIN_SRC ini :tangle ~/.gitconfig
[user]
	name = Colin Jaffe
	email = abbreviatedma@posteo.net
[core]
	excludesFile = ~/.gitignore-global
	ignorecase = false
	editor = emacsclient -c
[interactive]
	singleKey = true
[init]
	defaultBranch = main
[pull]
	rebase = false
[push]
	followTags = true
[gitlab]
	user = abbreviatedman
[github]
	user = abbreviatedman
#+END_SRC

** Things To Document

- Stuff from notes.md

** Waybar

This is the configuration for Waybar, Sway's status bar. It tells me things like the time and general computer state--battery, network connection, spare memory, etc.

I haven't added anything to it, only disabled modules I don't use, switched it to the left side, and broke text lines to make the width narrower. Programmers prefer things to be vertical, for reasons we'll get into at some point.

#+BEGIN_SRC jsonc :tangle ~/.config/waybar/config.jsonc
{
    // "layer": "top", // Waybar at top layer
     "position": "left", // Waybar position (top|bottom|left|right)
    // "height": 30, // Waybar height (to be removed for auto height)
    "width": 10, // Waybar width
    "spacing": 4, // Gaps between modules (4px)
    // Choose the order of the modules
    "modules-left": [
        "sway/workspaces",
        "sway/mode",
        "sway/scratchpad",
        "custom/media"
    ],
    // "modules-center": [
        // "sway/window"
    // ],
    "modules-right": [
        "mpd",
        "idle_inhibitor",
        "pulseaudio",
        "network",
        "power-profiles-daemon",
        "cpu",
        "memory",
        "temperature",
        "backlight",
        "keyboard-state",
        "sway/language",
        "battery",
        "battery#bat2",
        "clock",
        "tray",
        "custom/power"
    ],
    // Modules configuration
    // "sway/workspaces": {
    //     "disable-scroll": true,
    //     "all-outputs": true,
    //     "warp-on-scroll": false,
    //     "format": "{name}: {icon}",
    //     "format-icons": {
    //         "1": "ÔÑ†",
    //         "2": "Ôâ®",
    //         "3": "ÔÑ°",
    //         "4": "ÔÜº",
    //         "5": "ÔÅµ",
    //         "urgent": "ÔÅ™",
    //         "focused": "ÔÜí",
    //         "default": "ÔÑë"
    //     }
    // },
    "keyboard-state": {
        "numlock": true,
        "capslock": true,
        "format": "{name} {icon}",
        "format-icons": {
            "locked": "ÔÄ£",
            "unlocked": "ÔÇú"
        }
    },
    "sway/mode": {
        "format": "<span style=\"italic\">{}</span>"
    },
    "sway/scratchpad": {
        "format": "{icon} {count}",
        "show-empty": false,
        "format-icons": ["", "Ôãí"],
        "tooltip": true,
        "tooltip-format": "{app}: {title}"
    },
    "mpd": {
        "format": "{stateIcon} {consumeIcon}{randomIcon}{repeatIcon}{singleIcon}{artist} - {album} - {title} ({elapsedTime:%M:%S}/{totalTime:%M:%S}) ‚∏®{songPosition}|{queueLength}‚∏© {volume}% ÔÄÅ",
        "format-disconnected": "Disconnected ÔÄÅ",
        "format-stopped": "{consumeIcon}{randomIcon}{repeatIcon}{singleIcon}Stopped ÔÄÅ",
        "unknown-tag": "N/A",
        "interval": 5,
        "consume-icons": {
            "on": "ÔÉÑ "
        },
        "random-icons": {
            "off": "<span color=\"#f53c3c\">ÔÅ¥</span> ",
            "on": "ÔÅ¥ "
        },
        "repeat-icons": {
            "on": "ÔÄû "
        },
        "single-icons": {
            "on": "ÔÄû1 "
        },
        "state-icons": {
            "paused": "ÔÅå",
            "playing": "ÔÅã"
        },
        "tooltip-format": "MPD (connected)",
        "tooltip-format-disconnected": "MPD (disconnected)"
    },
    "idle_inhibitor": {
        "format": "{icon}",
        "format-icons": {
            "activated": "ÔÅÆ",
            "deactivated": "ÔÅ∞"
        }
    },
    "tray": {
        // "icon-size": 21,
        "spacing": 10
    },
    "clock": {
        // "timezone": "America/New_York",
        "tooltip-format": "<big>{:%Y %B}</big>\n<tt><small>{calendar}</small></tt>",
        "format-alt": "{:%Y-%m-%d}"
    },
    "cpu": {
        "format": "{usage}% Ôãõ",
        "tooltip": false
    },
    "memory": {
        "format": "{}% ÔÉâ"
    },
    "temperature": {
        // "thermal-zone": 2,
        // "hwmon-path": "/sys/class/hwmon/hwmon2/temp1_input",
        "critical-threshold": 80,
        // "format-critical": "{temperatureC}¬∞C {icon}",
        "format": "{temperatureC}¬∞C {icon}",
        "format-icons": ["Ôù´", "Ôãâ", "Ôù©"]
    },
    "backlight": {
        // "device": "acpi_video1",
        "format": "{percent}% {icon}",
        "format-icons": ["Óéç", "Óèì", "Óèë", "Óèè", "Óèé", "Óèç", "Óèä", "Óèà", "Óéõ"]
    },
    "battery": {
        "states": {
            // "good": 95,
            "warning": 30,
            "critical": 15
        },
        "format": "{capacity}% {icon}",
        "format-full": "{capacity}% {icon}",
        "format-charging": "{capacity}% Ôóß",
        "format-plugged": "{capacity}% Ôá¶",
        "format-alt": "{time} {icon}",
        // "format-good": "", // An empty format will hide the module
        // "format-full": "",
        "format-icons": ["ÔâÑ", "ÔâÉ", "ÔâÇ", "ÔâÅ", "ÔâÄ"]
    },
    "battery#bat2": {
        "bat": "BAT2"
    },
    "power-profiles-daemon": {
      "format": "{icon}",
      "tooltip-format": "Power profile: {profile}\nDriver: {driver}",
      "tooltip": true,
      "format-icons": {
        "default": "ÔÉß",
        "performance": "ÔÉß",
        "balanced": "Ôâé",
        "power-saver": "ÔÅ¨"
      }
    },
    "network": {
        // "interface": "wlp2*", // (Optional) To force the use of this interface
        "format-wifi": "{essid}\n({signalStrength}%) Ôá´",
        "format-ethernet": "{ipaddr}/{cidr} Ôûñ",
        "tooltip-format": "{ifname}\nvia {gwaddr} Ôûñ",
        "format-linked": "{ifname}\n(No IP) Ôûñ",
        "format-disconnected": "Disconnected ‚ö†",
        "format-alt": "{ifname}:\n{ipaddr}/{cidr}"
    },
    "pulseaudio": {
        // "scroll-step": 1, // %, can be a float
        "format": "{volume}% {icon}\n{format_source}",
        "format-bluetooth": "{volume}% {icon}Ôäî\n{format_source}",
        "format-bluetooth-muted": "Ôö© {icon}Ôäî\n{format_source}",
        "format-muted": "Ôö© {format_source}",
        "format-source": "{volume}% ÔÑ∞",
        "format-source-muted": "ÔÑ±",
        "format-icons": {
            "headphone": "ÔÄ•",
            "hands-free": "Ôñê",
            "headset": "Ôñê",
            "phone": "ÔÇï",
            "portable": "ÔÇï",
            "car": "ÔÜπ",
            "default": ["ÔÄ¶", "ÔÄß", "ÔÄ®"]
        },
        "on-click": "pavucontrol"
    },
    "custom/media": {
        "format": "{icon} {text}",
        "return-type": "json",
        "max-length": 40,
        "format-icons": {
            "spotify": "ÔÜº",
            "default": "üéú"
        },
        "escape": true,
        "exec": "$HOME/.config/waybar/mediaplayer.py 2> /dev/null" // Script in resources folder
        // "exec": "$HOME/.config/waybar/mediaplayer.py --player spotify 2> /dev/null" // Filter player based on name
    },
    "custom/power": {
        "format" : "‚èª ",
		"tooltip": false,
		"menu": "on-click",
		"menu-file": "$HOME/.config/waybar/power_menu.xml", // Menu file in resources folder
		"menu-actions": {
			"shutdown": "shutdown",
			"reboot": "reboot",
			"suspend": "systemctl suspend",
			"hibernate": "systemctl hibernate"
		}
    }
}
#+END_SRC

** General Computer Setup

So you bought yourself a new computer! Did you really need to? I hope you really needed to!

The reason I'm writing this document is that I lost my ThinkPad, bought a Pocket Reform that I almost immediately messed up by remapping the keys in such a way that I can't use its weird startup keyboard shortcut, and then somehow (still not sure how) deeply messed up the system that was on my Galago Pro.

So now I've wiped the Galago Pro and goddamn if I'm not going to configure it the right way this time, and make sure that when this happens again--and, obviously, that's a when not an if--I'll be more ready to start from scratch.

*** What System To Use?

I'm writing this document assuming you're using a Debian GNU+Linux system. That will make these directions match up perfectly if you are. However, with some minor tweaks you can use this setup with any Linux system, or, with more tweaks, macOS or Windows.

*** Set Up Password Entry Properly

I'm not a security expert. I'm not sure I'm really an expert in any computer system or sub-system, frankly--I'm more a dilettante than a delver.

All of which is to say that probably this section is wrong.

**** Set Sudo Privileges Up Right

If you find yourself unable to do sudo things without changing to root, this is how you can set things up to do sudo things without changing to root.

Your sudoers file (=/etc/sudoers= on Debian) has the following line:

#+BEGIN_SRC
root ALL=(ALL:ALL) ALL
#+END_SRC

What this does is say that the root user has those privileges.

After it, you should add an equivalent line, but with your username in place of =root=:

Let's test it by running =sudo visudo=, which should open the sudoers file in your default editor with sudo privileges.

**** Switching From No Password Feedback To Masked Password Feedback

By default, sudo password entry gives you no feedback as you type the password. No characters appear at all, as if you're not typing. This can be quite confusing the first time you encounter it, and leaves you more prone to mistyping your password. It's /annoying/, and the reason we do it, so that no one looking over our shoulder knows our password's length, is a truly useless security measure.

In the sudoers file, let's fix that. Use =sudo visudo= to open it up again, and change this line:

#+BEGIN_SRC
  Defaults env_reset
#+END_SRC

to:

#+BEGIN_SRC
  Defaults env_reset,pwfeedback
#+END_SRC

Now when you type your passwords in the command line, you'll get asterisks for each character you type.

** Debian Package Sources

The first thing you should do on a Debian system on a computer where software availability is more important than stability is switch to the Debian Unstable package sources.

#+BEGIN_SRC sh :tangle /sudo::/etc/apt/sources.list
  deb https://deb.debian.org/debian/ unstable main contrib non-free non-free-firmware
  deb-src https://deb.debian.org/debian/ unstable main contrib non-free non-free-firmware test
#+END_SRC

** VS Code

I may try to do this more automatically through the terminal, but, for now, go to VS Code's site and download their =.deb= file. Then run =sudo apt install [path to .deb file]=, and you're good.

** Emacs

The greatest operating system ever created.


*** Package Installation System

Set up package installation, as well as draw from the repository for non-GNU packages.

#+NAME: package-setup
#+BEGIN_SRC emacs-lisp
  (require 'package)
  (add-to-list 'package-archives
	       '("melpa" . "https://melpa.org/packages/"))
  (package-initialize)
  (package-refresh-contents)
#+END_SRC

*** Avoiding Mixing Init File and Custom File

#+NAME: custom-file-setup
#+BEGIN_SRC emacs-lisp
  (use-package emacs
    :init
    (setq custom-file "~/.emacs.d/emacs-custom-file.el")
    (unless (file-exists-p custom-file)
      (write-region "" nil custom-file)))
#+END_SRC

*** Org Babel Settings

#+NAME: org-babel-settings
#+BEGIN_SRC emacs-lisp
  (require 'ob-shell)
  (org-babel-do-load-languages
   'org-babel-load-languages
   '((shell . t)
     (emacs-lisp . t)))
#+END_SRC


*** Evil Mode

#+NAME: evil-mode
#+BEGIN_SRC emacs-lisp
  (use-package evil
    :ensure t
    :config (evil-mode 1))
#+END_SRC

*** Some Sane Defaults

#+NAME: sane-defaults
#+BEGIN_SRC emacs-lisp
  (setq inhibit-startup-message t
	visible-bell t)

  (menu-bar-mode -1)
  (scroll-bar-mode -1)
  (tool-bar-mode -1)
  (global-display-line-numbers-mode 1)
#+END_SRC

*** Color Theme

#+NAME: color-theme
#+BEGIN_SRC emacs-lisp
  (setq modus-themes-italic-constructs t
	modus-themes-bold-constructs t
	modus-themes-org-blocks 'gray-background
	modus-themes-completions (quote
				  ((matches . (intense background underline bold))
				   (selection . (accented intense bold))))

	modus-themes-headings '((0 . (variable-pitch  1.8))
				(1 . (variable-pitch  1.8))
				(2 . (variable-pitch  1.6))
				(3 . (variable-pitch  1.4))
				(4 . (variable-pitch  1.2))))

  (mapc #'disable-theme custom-enabled-themes)
  (load-theme 'modus-operandi t)
#+END_SRC

*** Remember Things

#+NAME: set-up-emacs-memory-systems
#+BEGIN_SRC emacs-lisp
  (recentf-mode 1)
  (setq history-length 100)
  (savehist-mode 1)
#+END_SRC

*** Index

Here is where I tangle all the source blocks in this file, in the order I'd like and to the files I want.

**** Emacs Config

#+BEGIN_SRC emacs-lisp :lexical yes :tangle ~/.emacs.d/init.el :mkdirp yes :noweb tangle
  <<package-setup>>
  <<custom-file-setup>>
  <<evil-mode>>
  <<sane-defaults>>
  <<color-theme>>
  <<set-up-emacs-memory-systems>>
  <<project-initial-action>>
#+END_SRC

**** Bash Config

#+BEGIN_SRC sh :tangle ~/.profile :noweb tangle
  # ~/.profile: executed by the command interpreter for login shells.
  # This file is not read by bash(1), if ~/.bash_profile or ~/.bash_login
  # exists.
  # see /usr/share/doc/bash/examples/startup-files for examples.
  # the files are located in the bash-doc package.

  # the default umask is set in /etc/profile; for setting the umask
  # for ssh logins, install and configure the libpam-umask package.
  #umask 022

  # if running bash
  if [ -n "$BASH_VERSION" ]; then
      # include .bashrc if it exists
      if [ -f "$HOME/.bashrc" ]; then
	  . "$HOME/.bashrc"
      fi
  fi

  # set PATH so it includes user's private bin if it exists
  if [ -d "$HOME/bin" ] ; then
      PATH="$HOME/bin:$PATH"
  fi

  # set PATH so it includes user's private bin if it exists
  if [ -d "$HOME/.local/bin" ] ; then
      PATH="$HOME/.local/bin:$PATH"
  fi

  <<keychain-settings>>
#+END_SRC
